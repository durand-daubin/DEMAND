packagel <- c("foreign","ggplot2","plyr")
lapply(packagel, require, character.only = T)
# if this breaks/fails because they haven't been installed use
#install.packages("foreign")
#install.packages("ggplot2")
#install.packages("plyr")
# or you can use this line will load all of them from the list above
# NB - this will ask to restart R, click no
#install.packages(packagel)
# path to data & results
# where's the data?
dpath <- "/Users/ben/Documents/Work/Data/Social Science Datatsets/Time Use 2005/processed"
# where do you want the results to go?
rpath <- "/Users/ben/Documents/Work/Projects/RCUK-DEMAND/Theme 1/results/ONS TU 2005"
# time axis defnition
# can't get this to work!
# halfhourlab <- "\"04:00\",\"06:00\", \"08:00\", \"10:00\", \"12:00\", \"14:00\", \"16:00\",\"18:00\",\"20:00\",\"22:00\""
# Load long form data -----------------------------------------------------------------
# Time use data in long form - this has data in 10 minute time 'slots'
# It also has a few survey variables attached to each time use slot
tu2005data <- read.csv(paste0(dpath, "timeusefinal_for_archive_diary_long_v2.0.csv"))
dpath <- "/Users/ben/Documents/Work/Data/Social Science Datatsets/Time Use 2005/processed/"
tu2005data <- read.csv(paste0(dpath, "timeusefinal_for_archive_diary_long_v2.0.csv"))
tu2005data <- read.csv(paste0(dpath,"UK-2005-TU-merged-long-reduced.csv"))
# Now stop to check what's in it and make sure we understand the format!
head(tu2005data)
# check values of main acts (the things people reported doing) by location
all_acts_by_location <- table("Main acts"= tu2005data$pact)
# ouptput to a csv file so we can keep for reference (useful later)
write.csv(all_acts_by_location, paste0(rpath,"all_acts_by_location-table.csv"), row.names=FALSE, na="")
# check values of months variable (so we see that seasons are represented)
table("Month"= tu2005data$t_month)
# recode month so it is easier to interpret
tu2005data$t_month[tu2005data$t_month == 2] <- "February"
tu2005data$t_month[tu2005data$t_month == 6] <- "June"
tu2005data$t_month[tu2005data$t_month == 9] <- "September"
tu2005data$t_month[tu2005data$t_month == 11] <- "November"
# set the order of the dow factor
tu2005data$s_dow <- factor(tu2005data$s_dow,
levels = c("February","June","September","November"))
table("Month"= tu2005data$t_month)
# check the days
table("Days"= tu2005data$s_dow)
# Out of order!
# set the order of the dow factor
tu2005data$s_dow <- factor(tu2005data$s_dow,
levels = c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"))
# recheck
table("Days"= tu2005data$s_dow)
table(tu2005data$s_dow)
# Header ###########################################
# Time Use data analysis for 'Laundry' paper
#
# Use ONS UK Time Use Survey 2005 to examine:
# - distributions of laundry in 2005
#
# Data source: http://discover.ukdataservice.ac.uk/catalogue/?sn=5592
# Data already in long format (but 10 minute slots)
#
# This work was funded by RCUK through the End User Energy Demand Centres Programme via the
# "DEMAND: Dynamics of Energy, Mobility and Demand" Centre (www.demand.ac.uk, gow.epsrc.ac.uk/NGBOViewGrant.aspx?GrantRef=EP/K011723/1)
#
# Copyright (C) 2014  University of Southampton
#
# Author: Ben Anderson (b.anderson@soton.ac.uk, @dataknut, https://github.com/dataknut)
# [Energy & Climate Change, Faculty of Engineering & Environment, University of Southampton]
#
# The MIT License (MIT) applies - see https://github.com/dataknut/
#
# end header
# To do: -----------------------------------------------------------------
# Prelims -----------------------------------------------------------------
# clear out all old objects etc to avoid confusion
rm(list = ls())
# set time
starttime <- proc.time()
# load required packages
packagel <- c("foreign","ggplot2","plyr")
lapply(packagel, require, character.only = T)
# if this breaks/fails because they haven't been installed use
#install.packages("foreign")
#install.packages("ggplot2")
#install.packages("plyr")
# or you can use this line will load all of them from the list above
# NB - this will ask to restart R, click no
#install.packages(packagel)
# path to data & results
# where's the data?
dpath <- "/Users/ben/Documents/Work/Data/Social Science Datatsets/Time Use 2005/processed/"
# where do you want the results to go?
rpath <- "/Users/ben/Documents/Work/Projects/RCUK-DEMAND/Theme 1/results/ONS TU 2005"
# time axis defnition
# can't get this to work!
# halfhourlab <- "\"04:00\",\"06:00\", \"08:00\", \"10:00\", \"12:00\", \"14:00\", \"16:00\",\"18:00\",\"20:00\",\"22:00\""
# Load long form data -----------------------------------------------------------------
# Time use data in long form - this has data in 10 minute time 'slots'
# It also has a few survey variables attached to each time use slot
tu2005data <- read.csv(paste0(dpath,"UK-2005-TU-merged-long-reduced.csv"))
# Now stop to check what's in it and make sure we understand the format!
head(tu2005data)
# check values of main acts (the things people reported doing) by location
all_acts_by_location <- table("Main acts"= tu2005data$pact)
# ouptput to a csv file so we can keep for reference (useful later)
write.csv(all_acts_by_location, paste0(rpath,"all_acts_by_location-table.csv"), row.names=FALSE, na="")
# check values of months variable (so we see that seasons are represented)
table("Month"= tu2005data$t_month)
# recode month so it is easier to interpret
tu2005data$t_month[tu2005data$t_month == 2] <- "February"
tu2005data$t_month[tu2005data$t_month == 6] <- "June"
tu2005data$t_month[tu2005data$t_month == 9] <- "September"
tu2005data$t_month[tu2005data$t_month == 11] <- "November"
# set the order of the month factor
tu2005data$s_dow <- factor(tu2005data$s_dow,
levels = c("February","June","September","November"))
# re-check
table("Month"= tu2005data$t_month)
# check the days
table("Days"= tu2005data$s_dow)
# check values of months variable (so we see that seasons are represented)
table("Month"= tu2005data$t_month)
# recode month so it is easier to interpret
tu2005data$t_month[tu2005data$t_month == 2] <- "February"
tu2005data$t_month[tu2005data$t_month == 6] <- "June"
tu2005data$t_month[tu2005data$t_month == 9] <- "September"
tu2005data$t_month[tu2005data$t_month == 11] <- "November"
# set the order of the month factor
tu2005data$t_month <- factor(tu2005data$t_month,
levels = c("February","June","September","November"))
# re-check
table("Month"= tu2005data$t_month)
# check the days
table("Days"= tu2005data$s_dow)
# Out of order!
# set the order of the dow factor
tu2005data$s_dow <- factor(tu2005data$s_dow,
levels = c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"))
# recheck
table("Days"= tu2005data$s_dow)
# Header ###########################################
# Time Use data analysis for 'Laundry' paper
#
# Use ONS UK Time Use Survey 2005 to examine:
# - distributions of laundry in 2005
#
# Data source: http://discover.ukdataservice.ac.uk/catalogue/?sn=5592
# Data already in long format (but 10 minute slots)
#
# This work was funded by RCUK through the End User Energy Demand Centres Programme via the
# "DEMAND: Dynamics of Energy, Mobility and Demand" Centre (www.demand.ac.uk, gow.epsrc.ac.uk/NGBOViewGrant.aspx?GrantRef=EP/K011723/1)
#
# Copyright (C) 2014  University of Southampton
#
# Author: Ben Anderson (b.anderson@soton.ac.uk, @dataknut, https://github.com/dataknut)
# [Energy & Climate Change, Faculty of Engineering & Environment, University of Southampton]
#
# The MIT License (MIT) applies - see https://github.com/dataknut/
#
# end header
# To do: -----------------------------------------------------------------
# Prelims -----------------------------------------------------------------
# clear out all old objects etc to avoid confusion
rm(list = ls())
# set time
starttime <- proc.time()
# load required packages
# foreign not needed if we are loading csv files
packagel <- c(ggplot2","plyr")
lapply(packagel, require, character.only = T)
# if this breaks/fails because they haven't been installed use
#install.packages("foreign")
#install.packages("ggplot2")
#install.packages("plyr")
# or you can use this line will load all of them from the list above
# NB - this will ask to restart R, click no
#install.packages(packagel)
# path to data & results
# where's the data?
dpath <- "/Users/ben/Documents/Work/Data/Social Science Datatsets/Time Use 2005/processed/"
# where do you want the results to go?
rpath <- "/Users/ben/Documents/Work/Projects/RCUK-DEMAND/Theme 1/results/ONS TU 2005"
# time axis defnition
# can't get this to work!
# halfhourlab <- "\"04:00\",\"06:00\", \"08:00\", \"10:00\", \"12:00\", \"14:00\", \"16:00\",\"18:00\",\"20:00\",\"22:00\""
# Load long form data -----------------------------------------------------------------
# Time use data in long form - this has data in 10 minute time 'slots'
# It also has a few survey variables attached to each time use slot
tu2005data <- read.csv(paste0(dpath,"UK-2005-TU-merged-long-reduced.csv"))
# Now stop to check what's in it and make sure we understand the format!
head(tu2005data)
# check values of main acts (the things people reported doing) by location
all_acts_by_location <- table("Main acts"= tu2005data$pact)
# ouptput to a csv file so we can keep for reference (useful later)
write.csv(all_acts_by_location, paste0(rpath,"all_acts_by_location-table.csv"), row.names=FALSE, na="")
# check values of months variable (so we see that seasons are represented)
table("Month"= tu2005data$t_month)
# recode month so it is easier to interpret
tu2005data$t_month[tu2005data$t_month == 2] <- "February"
tu2005data$t_month[tu2005data$t_month == 6] <- "June"
tu2005data$t_month[tu2005data$t_month == 9] <- "September"
tu2005data$t_month[tu2005data$t_month == 11] <- "November"
# set the order of the month factor
tu2005data$t_month <- factor(tu2005data$t_month,
levels = c("February","June","September","November"))
# re-check
table("Month"= tu2005data$t_month)
# check the days
table("Days"= tu2005data$s_dow)
# Out of order!
# set the order of the dow factor
tu2005data$s_dow <- factor(tu2005data$s_dow,
levels = c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"))
# recheck
table("Days"= tu2005data$s_dow)
tu2005data$pact_c <- as.character(tu2005data$pact)
tu2005data$pact_cn <- sub("/", " or ", tu2005data$pact_c)
table(tu2005data$pact_cn)
tu2005data$pact_cn <- sub("$+/+$", " or ", tu2005data$pact_c)
table(tu2005data$pact_cn)
tu2005data$pact_cn <- sub("/", " or ", tu2005data$pact_c)
table(tu2005data$pact_cn)
tu2005data$pact_cn <- sub("/", " or! ", tu2005data$pact_c)
table(tu2005data$pact_cn)
tu2005data$pact_cn <- sub("/", " or ", tu2005data$pact_c)
tu2005data$pact_cn <- gsub("/", " or ", tu2005data$pact_c)
table(tu2005data$pact_cn)
tu2005data$pact_cnf <- as.factor(tu2005data$pact_cn)
tu2005data$sact_cnf <- as.factor(tu2005data$sact_cn)
tu2005data$pact_c <- as.character(tu2005data$pact)
tu2005data$pact_cn <- gsub("/", " or ", tu2005data$pact_c)
tu2005data$sact_c <- as.character(tu2005data$sact)
tu2005data$sact_cn <- gsub("/", " or ", tu2005data$sact_c)
tu2005data$pact_cnf <- as.factor(tu2005data$pact_cn)
tu2005data$sact_cnf <- as.factor(tu2005data$sact_cn)
tu2005data$pact_cn <- gsub("/", " or ", tu2005data$pact_c)
tu2005data$pact_cn <- grep("travel", tu2005data$pact_c)
tu2005data$pact_t <- grep("travel", tu2005data$pact_c)
tu2005data$pact_t <- grepl("travel", tu2005data$pact_c)
table(tu2005data$pact_t)
# Something like:
tu2005data$pact_c <- as.character(tu2005data$pact)
tu2005data$pact_nc <- gsub("/", " or ", tu2005data$pact_c)
# find the travel
tu2005data$pact_t <- grepl("travel", tu2005data$pact_c)
tu2005data$sact_c <- as.character(tu2005data$sact)
tu2005data$sact_nc <- gsub("/", " or ", tu2005data$sact_c)
# find the travel
tu2005data$sact_t <- grepl("travel", tu2005data$sact_c)
# convert back to factors
tu2005data$pact_nf <- as.factor(tu2005data$pact_cn)
tu2005data$sact_nf <- as.factor(tu2005data$sact_cn)
# set travel
tu2005data$pact_nf[tu2005data$pact_t == "TRUE"] <- "travel"
tu2005data$sact_nf[tu2005data$sact_t == "TRUE"] <- "travel"
tu2005data$pact_t <- as.factor(grepl("travel", tu2005data$pact_c))
tu2005data$sact_t <- as.factor(grepl("travel", tu2005data$sact_c))
# convert back to factors
tu2005data$pact_nf <- as.factor(tu2005data$pact_cn)
tu2005data$sact_nf <- as.factor(tu2005data$sact_cn)
# set travel
tu2005data$pact_nf[tu2005data$pact_t == "TRUE"] <- "travel"
tu2005data$sact_nf[tu2005data$sact_t == "TRUE"] <- "travel"
table(tu2005data$pact_t)
tu2005data$pact_nf[tu2005data$pact_t == TRUE] <- "travel"
tu2005data$sact_nf[tu2005data$sact_t == TRUE] <- "travel"
tu2005data$pact_nf[tu2005data$pact_t == 1] <- "travel"
tu2005data$sact_nf[tu2005data$sact_t == 1] <- "travel"
# find the travel
tu2005data$sact_t <- grepl("travel", tu2005data$sact_c)
# find the travel
tu2005data$pact_t <- grepl("travel", tu2005data$pact_c)
tu2005data$pact_nc[tu2005data$pact_t == 1] <- "travel"
tu2005data$sact_nc[tu2005data$sact_t == 1] <- "travel"
tu2005data$pact_nc[tu2005data$pact_t == TRUE] <- "travel"
tu2005data$sact_nc[tu2005data$sact_t == TRUE] <- "travel"
table(tu2005data$pact_nc)
# convert back to factors
tu2005data$pact_nf <- as.factor(tu2005data$pact_nc)
tu2005data$sact_nf <- as.factor(tu2005data$sact_nc)
tabel(tu2005data$pact_nf)
table(tu2005data$pact_nf)
all_acts_nf <- ddply(tu2005data, c("s_starttime","pact"), summarise, count=sum(count))
all_acts_stplotn <- ggplot(all_acts_nf, aes(x=s_starttime, y=count, fill=pact_nf, group=pact_nf)) + geom_area()
all_acts_stplotn + xlab("Time of Day") + ylab("N reporting") +
labs(fill="Activity") +
scale_x_discrete(breaks=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30"),
labels=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30")) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=1)) +
theme(legend.position="right")
all_acts_nf <- ddply(tu2005data, c("s_starttime","pact_nf"), summarise, count=sum(count))
table(tu2005data$pact_nf)
# Header ###########################################
# Time Use data analysis for 'Laundry' paper
#
# Use ONS UK Time Use Survey 2005 to examine:
# - distributions of laundry in 2005
#
# Data source: http://discover.ukdataservice.ac.uk/catalogue/?sn=5592
# Data already in long format (but 10 minute slots)
#
# This work was funded by RCUK through the End User Energy Demand Centres Programme via the
# "DEMAND: Dynamics of Energy, Mobility and Demand" Centre (www.demand.ac.uk, gow.epsrc.ac.uk/NGBOViewGrant.aspx?GrantRef=EP/K011723/1)
#
# Copyright (C) 2014  University of Southampton
#
# Author: Ben Anderson (b.anderson@soton.ac.uk, @dataknut, https://github.com/dataknut)
# [Energy & Climate Change, Faculty of Engineering & Environment, University of Southampton]
#
# The MIT License (MIT) applies - see https://github.com/dataknut/
#
# end header
# To do: -----------------------------------------------------------------
# Prelims -----------------------------------------------------------------
# clear out all old objects etc to avoid confusion
rm(list = ls())
# set time
starttime <- proc.time()
# load required packages
# foreign not needed if we are loading csv files
packagel <- c(ggplot2","plyr")
lapply(packagel, require, character.only = T)
# if this breaks/fails because they haven't been installed use
#install.packages("foreign")
#install.packages("ggplot2")
#install.packages("plyr")
# or you can use this line will load all of them from the list above
# NB - this will ask to restart R, click no
#install.packages(packagel)
# path to data & results
# where's the data?
dpath <- "/Users/ben/Documents/Work/Data/Social Science Datatsets/Time Use 2005/processed/"
# where do you want the results to go?
rpath <- "/Users/ben/Documents/Work/Projects/RCUK-DEMAND/Theme 1/results/ONS TU 2005"
# time axis defnition
# can't get this to work!
# halfhourlab <- "\"04:00\",\"06:00\", \"08:00\", \"10:00\", \"12:00\", \"14:00\", \"16:00\",\"18:00\",\"20:00\",\"22:00\""
# Load long form data -----------------------------------------------------------------
# Time use data in long form - this has data in 10 minute time 'slots'
# It also has a few survey variables attached to each time use slot
tu2005data <- read.csv(paste0(dpath,"UK-2005-TU-merged-long-reduced.csv"))
# Now stop to check what's in it and make sure we understand the format!
head(tu2005data)
# check values of main acts (the things people reported doing) by location
all_acts_by_location <- table("Main acts"= tu2005data$pact)
# ouptput to a csv file so we can keep for reference (useful later)
write.csv(all_acts_by_location, paste0(rpath,"all_acts_by_location-table.csv"), row.names=FALSE, na="")
# check values of months variable (so we see that seasons are represented)
table("Month"= tu2005data$t_month)
# recode month so it is easier to interpret
tu2005data$t_month[tu2005data$t_month == 2] <- "February"
tu2005data$t_month[tu2005data$t_month == 6] <- "June"
tu2005data$t_month[tu2005data$t_month == 9] <- "September"
tu2005data$t_month[tu2005data$t_month == 11] <- "November"
# set the order of the month factor
tu2005data$t_month <- factor(tu2005data$t_month,
levels = c("February","June","September","November"))
# re-check
table("Month"= tu2005data$t_month)
# check the days
table("Days"= tu2005data$s_dow)
# Out of order!
# set the order of the dow factor
tu2005data$s_dow <- factor(tu2005data$s_dow,
levels = c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"))
# recheck
table("Days"= tu2005data$s_dow)
# Test: all acts -----------------------------------------------------------------
# add a dummy variable we can count
tu2005data$count <- 1
# create a table which counts the occurences of 'pact' in each 10 minute slot
all_acts <- ddply(tu2005data, c("s_starttime","pact"), summarise, count=sum(count))
# draw an unintelligible line graph using the table
all_acts_lplot <- ggplot(all_acts, aes(x=s_starttime, y=count, colour=pact, group=pact)) + geom_line()
all_acts_lplot + xlab("Time of Day") + ylab("N reporting") +
labs(colour="Activity") +
scale_x_discrete(breaks=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30"),
labels=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30")) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=1)) +
theme(legend.position="right")
# save the plot
ggsave(paste0(rpath,"all_acts_tod_lineplot.pdf"), width=12, height=8, unit="cm", dpi=300)
# and an unintelligible stacked chart
all_acts_stplot <- ggplot(all_acts, aes(x=s_starttime, y=count, fill=pact, group=pact)) + geom_area()
all_acts_stplot + xlab("Time of Day") + ylab("N reporting") +
labs(fill="Activity") +
scale_x_discrete(breaks=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30"),
labels=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30")) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=1)) +
theme(legend.position="right")
# save the plot
ggsave(paste0(rpath,"all_acts_tod_stackedplot.pdf"), width=12, height=8, unit="cm", dpi=300)
# What we really want to do is to create a new column with primary acts where:
# - travel is collapsed to 1
# - the '/' are removed to make graph saving easier
# Something like:
tu2005data$pact_c <- as.character(tu2005data$pact)
tu2005data$pact_nc <- gsub("/", " or ", tu2005data$pact_c)
# find the travel
tu2005data$pact_t <- grepl("travel", tu2005data$pact_c)
tu2005data$sact_c <- as.character(tu2005data$sact)
tu2005data$sact_nc <- gsub("/", " or ", tu2005data$sact_c)
# find the travel
tu2005data$sact_t <- grepl("travel", tu2005data$sact_c)
# set travel
tu2005data$pact_nc[tu2005data$pact_t == TRUE] <- "travel"
tu2005data$sact_nc[tu2005data$sact_t == TRUE] <- "travel"
# convert back to factors
tu2005data$pact_nf <- as.factor(tu2005data$pact_nc)
tu2005data$sact_nf <- as.factor(tu2005data$sact_nc)
table(tu2005data$pact_nf)
# now re-try the stacked chart - there are fewer categories (but still a lot!)
all_acts_nf <- ddply(tu2005data, c("s_starttime","pact_nf"), summarise, count=sum(count))
all_acts_stplotn <- ggplot(all_acts_nf, aes(x=s_starttime, y=count, fill=pact_nf, group=pact_nf)) + geom_area()
all_acts_stplotn + xlab("Time of Day") + ylab("N reporting") +
labs(fill="Activity") +
scale_x_discrete(breaks=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30"),
labels=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30")) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=1)) +
theme(legend.position="right")
# save the plot
ggsave(paste0(rpath,"all_acts_tod_stackedplot.pdf"), width=12, height=8, unit="cm", dpi=300)
ylabt <- "laundry"
tu2005data$laundry_all <- 0
# we're interested in laundry at home (for now!)
tu2005data$laundry_all[tu2005data$pact == "washing clothes" &
tu2005data$lact != "elsewhere" |
tu2005data$sact == "washing clothes" &
tu2005data$lact != "elsewhere"] <- 1
# make the table
laundry <- ddply(tu2005data, c("s_dow", "s_halfhour"), summarise,
pc=100*mean(laundry_all),
sd=sd(laundry_all))
laundry
library(help = "stats")
laundry <- ddply(tu2005data, c("s_dow", "s_halfhour"), summarise,
pc=100*mean(laundry_all),
n=sum(count),
sd=sd(laundry_all))
laundry
laundry$se = sqrt(pc*(1-pc)/n)
laundry$se = sqrt(laundry$pc*(1-laundry$pc)/laundry$n)
laundry
laundry <- ddply(tu2005data, c("s_dow", "s_halfhour"), summarise,
n=sum(count),
pc=mean(laundry_all),
sd=sd(laundry_all))
# CI for propn
# 2∗1.96∗ sqrt(p∗(1−p)/n)
laundry$se = sqrt(laundry$pc*(1-laundry$pc)/laundry$n)
laundry
laundry$ci <- 2 * laundry$se
laundry$ci <- 1.96 * laundry$se
# plot it
laundry_plot <- ggplot(laundry, aes(x=s_halfhour, y=pc, colour=s_dow, group=s_dow)) + geom_line()
laundry_plot + xlab("Time of Day") +
ylab(paste("% reporting", ylabt)) +
labs(colour="Day of the week") +
scale_x_discrete(breaks=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30"),
labels=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30")) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=1))
laundry_plot + xlab("Time of Day") +
ylab(paste("% reporting", ylabt)) +
labs(colour="Day of the week") +
scale_x_discrete(breaks=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30"),
labels=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30")) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=1))+
geom_errorbar(aes(ymin=pc-ci, ymax=pc+ci), width=.2)
laundry_plot + xlab("Time of Day") +
ylab(paste("% reporting", ylabt)) +
labs(colour="Day of the week") +
scale_x_discrete(breaks=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30"),
labels=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30")) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=1)) +
facet_wrap( ~ s_dow) +
geom_errorbar(aes(ymin=pc-ci, ymax=pc+ci), width=.2)
# working status
laundry_wrk <- ddply(tu2005data, c("wrking", "s_halfhour", "s_dow"), summarise, pc=100*mean(laundry_all))
laundry_plot <- ggplot(laundry_wrk, aes(x=s_halfhour, y=pc, colour=wrking, group=wrking)) + geom_line()
laundry_plot + xlab("Time of Day") +
ylab(paste("% reporting", ylabt)) +
labs(colour="Working status") +
scale_x_discrete(breaks=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30"),
labels=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30")) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=1)) +
geom_errorbar(aes(ymin=pc-ci, ymax=pc+ci), width=.2) +
facet_wrap( ~ s_dow) +
theme(legend.position=c(0.5,0.2))
# working status
laundry_wrk <- ddply(tu2005data, c("wrking", "s_halfhour", "s_dow"), summarise,
n=sum(count),
pc=mean(laundry_all),
sd=sd(laundry_all))
# CI for propn
# +/- (1.96 ∗ sqrt(p∗(1−p)/n))
laundry_wrk$se <- sqrt(laundry$pc*(1-laundry$pc)/laundry$n)
laundry_wrk$ci <- 1.96 * laundry$se
laundry_plot <- ggplot(laundry_wrk, aes(x=s_halfhour, y=pc, colour=wrking, group=wrking)) + geom_line()
laundry_plot + xlab("Time of Day") +
ylab(paste("% reporting", ylabt)) +
labs(colour="Working status") +
scale_x_discrete(breaks=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30"),
labels=c("00:00","04:00","08:00","12:00","16:00","20:00","23:30")) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=1)) +
geom_errorbar(aes(ymin=pc-ci, ymax=pc+ci), width=.2) +
facet_wrap( ~ s_dow) +
theme(legend.position=c(0.5,0.2))
# save the plot
ggsave(paste0(rpath,"laundry_tod_by_working_plot.pdf"), width=12, height=8, unit="cm", dpi=300)
# foreign not needed if we are loading csv files
packagel <- c("ggplot2","plyr")
install.packages(packagel)
lapply(packagel, require, character.only = T)
install.packages(packagel)
